-- MySQL Script generated by MySQL Workbench
-- 10/24/17 19:48:14
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema checkpoint
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema checkpoint
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `checkpoint` DEFAULT CHARACTER SET utf8 ;
USE `checkpoint` ;

-- -----------------------------------------------------
-- Table `checkpoint`.`ubicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`ubicacion` (
  `idubicacion` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `codigo_qr` VARCHAR(45) NOT NULL,
  `fk_ubicacion_idubicacion` INT(11) NULL DEFAULT NULL COMMENT 'dependencia de otra ubicacion, para crear jerarquia segun se necesite. Puede ser nulo en caso de que no tenga depencia (ubicacion raiz como \'campus\')',
  PRIMARY KEY (`idubicacion`),
  INDEX `fk_ubicacion_ubicacion1_idx` (`fk_ubicacion_idubicacion` ASC),
  CONSTRAINT `fk_ubicacion_ubicacion1`
    FOREIGN KEY (`fk_ubicacion_idubicacion`)
    REFERENCES `checkpoint`.`ubicacion` (`idubicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`usuario` (
  `idusuario` INT(11) NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `metodologin` VARCHAR(25) NOT NULL,
  `estado` ENUM('Activo','Inactivo') NOT NULL DEFAULT 'Activo',
  PRIMARY KEY (`idusuario`),
  UNIQUE INDEX `UN_USUARIO` (`email` ASC, `nombre` ASC),
  UNIQUE INDEX `ID_USUARIO_IND` (`idusuario` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`servicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`servicios` (
  `idservicios` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(20) NOT NULL COMMENT 'longitud 20 por tema de mostrar nombre nombre debajo de icono.',
  `email_valoraciones` VARCHAR(45) NULL COMMENT 'puede ser nulo en el caso de que coincida con el del encargado',
  `habilitado` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'al crearse tiene que estar deshabilitado',
  `usuario_idusuario` INT(11) NOT NULL,
  `icono` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idservicios`, `usuario_idusuario`),
  INDEX `fk_servicios_usuario1_idx` (`usuario_idusuario` ASC),
  CONSTRAINT `fk_servicios_usuario1`
    FOREIGN KEY (`usuario_idusuario`)
    REFERENCES `checkpoint`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`valoraciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`valoraciones` (
  `idvaloraciones` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `tipo` ENUM('reclamo','cualificacion') NOT NULL DEFAULT 'reclamo' COMMENT 'si se trata de un reclamo o una calificacion (podrian agregarse',
  `recibir_notificacion_email` TINYINT(1) NOT NULL DEFAULT 1,
  `permite_foto` TINYINT(1) NOT NULL DEFAULT 0,
  `permite_descripcion` TINYINT(1) NOT NULL DEFAULT 0,
  `permite_email` TINYINT(1) NOT NULL DEFAULT 0,
  `habilitado` TINYINT(1) NOT NULL DEFAULT 0,
  `vencimiento` INT(11) NULL COMMENT 'es el periodo de tiempo de vigencia de la valoracion en dias a partir del momento en el que se realiza.',
  `fk_servicios_idservicios` INT(11) NOT NULL,
  PRIMARY KEY (`idvaloraciones`),
  INDEX `fk_valoraciones_servicios1_idx` (`fk_servicios_idservicios` ASC),
  CONSTRAINT `fk_valoraciones_servicios1`
    FOREIGN KEY (`fk_servicios_idservicios`)
    REFERENCES `checkpoint`.`servicios` (`idservicios`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`ubicacion_valoracion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`ubicacion_valoracion` (
  `idubicacion_valoracion` INT(11) NOT NULL AUTO_INCREMENT,
  `fk_ubicacion_idubicacion` INT(11) NOT NULL,
  `fk_valoraciones_idvaloraciones` INT(11) NOT NULL,
  PRIMARY KEY (`idubicacion_valoracion`),
  UNIQUE INDEX `unico` (`fk_ubicacion_idubicacion` ASC, `fk_valoraciones_idvaloraciones` ASC),
  INDEX `fk_ubicacion_valoracion_ubicacion1_idx` (`fk_ubicacion_idubicacion` ASC),
  INDEX `fk_ubicacion_valoracion_valoraciones1_idx` (`fk_valoraciones_idvaloraciones` ASC),
  CONSTRAINT `fk_ubicacion_valoracion_ubicacion1`
    FOREIGN KEY (`fk_ubicacion_idubicacion`)
    REFERENCES `checkpoint`.`ubicacion` (`idubicacion`),
  CONSTRAINT `fk_ubicacion_valoracion_valoraciones1`
    FOREIGN KEY (`fk_valoraciones_idvaloraciones`)
    REFERENCES `checkpoint`.`valoraciones` (`idvaloraciones`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`valoracion_hecha`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`valoracion_hecha` (
  `idvaloracion_hecha` INT(11) NOT NULL AUTO_INCREMENT,
  `ubicacion_valoracion_idubicacion_valoracion` INT(11) NOT NULL,
  `url_imagen` VARCHAR(45) NULL DEFAULT NULL,
  `descripcion` VARCHAR(45) NULL DEFAULT NULL,
  `email_devolucion` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idvaloracion_hecha`),
  INDEX `fk_valoracion_hecha_ubicacion_valoracion1_idx` (`ubicacion_valoracion_idubicacion_valoracion` ASC),
  CONSTRAINT `fk_valoracion_hecha_ubicacion_valoracion1`
    FOREIGN KEY (`ubicacion_valoracion_idubicacion_valoracion`)
    REFERENCES `checkpoint`.`ubicacion_valoracion` (`idubicacion_valoracion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`cambio_estado_valoracion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`cambio_estado_valoracion` (
  `idcambio_estado_valoracion` INT(11) NOT NULL AUTO_INCREMENT,
  `estado` ENUM('creado','terminado','espera') NOT NULL,
  `fecha` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `fk_valoracion_hecha_idvaloracion_hecha` INT(11) NOT NULL,
  PRIMARY KEY (`idcambio_estado_valoracion`),
  UNIQUE INDEX `unico` (`estado` ASC, `fk_valoracion_hecha_idvaloracion_hecha` ASC),
  INDEX `fk_cambio_estado_valoracion_valoracion_hecha1_idx` (`fk_valoracion_hecha_idvaloracion_hecha` ASC),
  CONSTRAINT `fk_cambio_estado_valoracion_valoracion_hecha1`
    FOREIGN KEY (`fk_valoracion_hecha_idvaloracion_hecha`)
    REFERENCES `checkpoint`.`valoracion_hecha` (`idvaloracion_hecha`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`permiso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`permiso` (
  `idpermiso` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idpermiso`),
  UNIQUE INDEX `ID_PERMISO_IND` (`idpermiso` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 30
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`registro_habilitar_servicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`registro_habilitar_servicios` (
  `habilitado` TINYINT(1) NOT NULL,
  `fecha` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `fk_servicios_idservicios` INT(11) NOT NULL,
  PRIMARY KEY (`habilitado`, `fecha`, `fk_servicios_idservicios`),
  INDEX `fk_registro_habilitar_servicios_servicios1_idx` (`fk_servicios_idservicios` ASC),
  CONSTRAINT `fk_registro_habilitar_servicios_servicios1`
    FOREIGN KEY (`fk_servicios_idservicios`)
    REFERENCES `checkpoint`.`servicios` (`idservicios`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`registro_habilitar_valoracion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`registro_habilitar_valoracion` (
  `habilitado` TINYINT(1) NOT NULL,
  `fecha` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `fk_valoraciones_idvaloraciones` INT(11) NOT NULL,
  PRIMARY KEY (`habilitado`, `fecha`, `fk_valoraciones_idvaloraciones`),
  INDEX `fk_reg_habilitar_valoracion_valoraciones1_idx` (`fk_valoraciones_idvaloraciones` ASC),
  CONSTRAINT `fk_reg_habilitar_valoracion_valoraciones1`
    FOREIGN KEY (`fk_valoraciones_idvaloraciones`)
    REFERENCES `checkpoint`.`valoraciones` (`idvaloraciones`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`rol` (
  `idrol` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idrol`),
  UNIQUE INDEX `ID_ROL_IND` (`idrol` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`rol_permiso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`rol_permiso` (
  `idrol` INT(11) NOT NULL,
  `idpermiso` INT(11) NOT NULL,
  PRIMARY KEY (`idpermiso`, `idrol`),
  UNIQUE INDEX `ID_ROL_PERMISO_IND` (`idpermiso` ASC, `idrol` ASC),
  INDEX `FKASO_ROL_IND` (`idrol` ASC),
  CONSTRAINT `FKASO_PER`
    FOREIGN KEY (`idpermiso`)
    REFERENCES `checkpoint`.`permiso` (`idpermiso`),
  CONSTRAINT `FKASO_ROL_FK`
    FOREIGN KEY (`idrol`)
    REFERENCES `checkpoint`.`rol` (`idrol`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`usuario_google`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`usuario_google` (
  `idusuario` INT(11) NOT NULL,
  `googleid` VARCHAR(255) NOT NULL,
  `imagen` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`idusuario`),
  UNIQUE INDEX `SID_USUARIO_GOOGLE_ID` (`googleid` ASC),
  UNIQUE INDEX `SID_USUARIO_GOOGLE_IND` (`googleid` ASC),
  UNIQUE INDEX `FKUSU_USU_1_IND` (`idusuario` ASC),
  CONSTRAINT `FKUSU_USU_1_FK`
    FOREIGN KEY (`idusuario`)
    REFERENCES `checkpoint`.`usuario` (`idusuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`usuario_manual`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`usuario_manual` (
  `idusuario` INT(11) NOT NULL,
  `clave` CHAR(1) NOT NULL,
  PRIMARY KEY (`idusuario`),
  UNIQUE INDEX `FKUSU_USU_IND` (`idusuario` ASC),
  CONSTRAINT `FKUSU_USU_FK`
    FOREIGN KEY (`idusuario`)
    REFERENCES `checkpoint`.`usuario` (`idusuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`usuario_rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`usuario_rol` (
  `idrol` INT(11) NOT NULL,
  `idusuario` INT(11) NOT NULL,
  PRIMARY KEY (`idrol`, `idusuario`),
  UNIQUE INDEX `ID_USUARIO_ROL_IND` (`idrol` ASC, `idusuario` ASC),
  INDEX `FKVIN_USU_IND` (`idusuario` ASC),
  CONSTRAINT `FKVIN_ROL`
    FOREIGN KEY (`idrol`)
    REFERENCES `checkpoint`.`rol` (`idrol`),
  CONSTRAINT `FKVIN_USU_FK`
    FOREIGN KEY (`idusuario`)
    REFERENCES `checkpoint`.`usuario` (`idusuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `checkpoint`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoint`.`log` (
  `idlog` INT NOT NULL AUTO_INCREMENT COMMENT 'registro de las actualizaciones los servicios y valoraciones.',
  `fecha` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idlog`))
ENGINE = InnoDB;

USE `checkpoint`;

DELIMITER $$
USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`ubicacion_AFTER_INSERT` AFTER INSERT ON `ubicacion` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`ubicacion_AFTER_UPDATE` AFTER UPDATE ON `ubicacion` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`ubicacion_AFTER_DELETE` AFTER DELETE ON `ubicacion` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`servicios_AFTER_INSERT` AFTER INSERT ON `servicios` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`servicios_AFTER_UPDATE` AFTER UPDATE ON `servicios` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`servicios_AFTER_DELETE` AFTER DELETE ON `servicios` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`valoraciones_AFTER_INSERT` AFTER INSERT ON `valoraciones` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`valoraciones_AFTER_UPDATE` AFTER UPDATE ON `valoraciones` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`valoraciones_AFTER_DELETE` AFTER DELETE ON `valoraciones` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`ubicacion_valoracion_AFTER_INSERT` AFTER INSERT ON `ubicacion_valoracion` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`ubicacion_valoracion_AFTER_UPDATE` AFTER UPDATE ON `ubicacion_valoracion` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$

USE `checkpoint`$$
CREATE DEFINER = CURRENT_USER TRIGGER `checkpoint`.`ubicacion_valoracion_AFTER_DELETE` AFTER DELETE ON `ubicacion_valoracion` FOR EACH ROW
BEGIN
insert into log values(null,null);
END
$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

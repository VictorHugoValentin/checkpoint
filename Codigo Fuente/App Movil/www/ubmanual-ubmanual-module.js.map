{"version":3,"sources":["webpack:///./src/app/ubmanual/ubmanual.module.ts","webpack:///./src/app/ubmanual/ubmanual.page.html","webpack:///./src/app/ubmanual/ubmanual.page.scss","webpack:///./src/app/ubmanual/ubmanual.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,8jBAA8jB,2BAA2B,qO;;;;;;;;;;;ACAzlB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAb;AACC;AACM;AAOzD;IAQE,sBAAmB,MAAqB,EACrB,MAAc,EACd,KAAqB;QAFrB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED,qCAAc,GAAd,UAAe,QAAgB;QAA/B,iBAOC;QANC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;iBACjC,IAAI,CAAC,UAAC,IAAI;gBACT,YAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAAnC,CAAmC,CACpC,CAAC;SACL;IACH,CAAC;IAED,mCAAY,GAAZ,UAAa,QAAgB,EAAE,WAAmB,EAAE,MAAc,EAAE,KAAa,EAAE,SAAiB,EAAE,WAAmB;QACvH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc;YACR,QAAQ;YACR,WAAW;YACX,MAAM;YACN,KAAK;YACL,SAAS;YACT,WAAW,CAAC,CAAC,CAAC;IAE5C,CAAC;IAED,+BAAQ,GAAR;IACA,CAAC;IAvCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kGAAmC;;SAEpC,CAAC;+EAS2B,8DAAa;YACb,sDAAM;YACP,8DAAc;OAV7B,YAAY,CAyCxB;IAAD,mBAAC;CAAA;AAzCwB","file":"ubmanual-ubmanual-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UbmanualPage } from './ubmanual.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UbmanualPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UbmanualPage]\n})\nexport class UbmanualPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title text-center>\\n          <img src=\\\"assets/img/logo.png\\\" width=\\\"30\\\" height=\\\"40\\\" />\\n    </ion-title>\\n  </ion-toolbar> \\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n      <ion-item *ngFor=\\\"let ubicacion of ubicaciones\\\">\\n          <div (click)=\\\"valoraciones(idservicio,descripcionservicio,nombreservicio,iconoservicio,ubicacion.codigoqr,ubicacion.idubicacion)\\\">\\n              <h1>{{ubicacion.nombreubicacion}}</h1>\\n          </div>\\n      </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n      <ion-title text-center color=\\\"light\\\">Ubicaci√≥n</ion-title>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VibWFudWFsL3VibWFudWFsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SQliteService } from '../s-qlite.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-ubmanual',\n  templateUrl: './ubmanual.page.html',\n  styleUrls: ['./ubmanual.page.scss'],\n})\nexport class UbmanualPage implements OnInit {\n\n  ubicaciones: Array<any>;\n  idservicio: number;\n  descripcionservicio: string;\n  nombreservicio: string;\n  iconoservicio: number;\n\n  constructor(public sQlite: SQliteService,\n              public router: Router,\n              public route: ActivatedRoute) { \n            this.descripcionservicio = this.route.snapshot.paramMap.get('descripcion');\n            this.nombreservicio = this.route.snapshot.paramMap.get('nombre');\n            this.iconoservicio = parseInt(this.route.snapshot.paramMap.get('icono'));\n            this.idservicio = parseInt(this.route.snapshot.paramMap.get('servicio'));\n            this.getUbicaciones(this.idservicio);\n  }\n\n  getUbicaciones(servicio: number) {\n    if (servicio) {\n      this.sQlite.getUbicaciones(servicio)\n        .then((data) =>\n          this.ubicaciones = JSON.parse(data)\n        );\n    }\n  }\n\n  valoraciones(servicio: number, descripcion: string, nombre: string, icono: number, ubicacion: string, idubicacion: number) {\n    this.router.navigate(['valoraciones',\n                                servicio, \n                                descripcion, \n                                nombre,\n                                icono,\n                                ubicacion,\n                                idubicacion]);\n                                        \n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n\n  \n \n\n  \n\n"],"sourceRoot":""}